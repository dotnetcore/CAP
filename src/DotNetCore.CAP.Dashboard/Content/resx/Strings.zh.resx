<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Common_Created" xml:space="preserve">
    <value>创建</value>
  </data>
  <data name="Common_Delete" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="Common_Deleting" xml:space="preserve">
    <value>删除中...</value>
  </data>
  <data name="Common_DeleteSelected" xml:space="preserve">
    <value>删除选中</value>
  </data>
  <data name="Common_Enqueueing" xml:space="preserve">
    <value>加入队列中...</value>
  </data>
  <data name="Common_Fetched" xml:space="preserve">
    <value>获取到</value>
  </data>
  <data name="Common_Id" xml:space="preserve">
    <value>编号</value>
  </data>
  <data name="Common_Version" xml:space="preserve">
    <value>版本</value>
  </data>
  <data name="Common_LessDetails" xml:space="preserve">
    <value>收起...</value>
  </data>
  <data name="Common_MoreDetails" xml:space="preserve">
    <value>更多...</value>
  </data>
  <data name="Common_PeriodDay" xml:space="preserve">
    <value>天</value>
  </data>
  <data name="Common_PeriodWeek" xml:space="preserve">
    <value>周</value>
  </data>
  <data name="Common_Reason" xml:space="preserve">
    <value>原因</value>
  </data>
  <data name="Common_RequeueMessages" xml:space="preserve">
    <value>重新加入队列</value>
  </data>
  <data name="Common_Retry" xml:space="preserve">
    <value>重试</value>
  </data>
  <data name="Common_Server" xml:space="preserve">
    <value>服务器</value>
  </data>
  <data name="Common_State" xml:space="preserve">
    <value>状态</value>
  </data>
  <data name="Common_Unknown" xml:space="preserve">
    <value>未知</value>
  </data>
  <data name="HomePage_HistoryGraph" xml:space="preserve">
    <value>当日走势</value>
  </data>
  <data name="HomePage_RealtimeGraph" xml:space="preserve">
    <value>实时走势</value>
  </data>
  <data name="HomePage_Title" xml:space="preserve">
    <value>仪表盘</value>
  </data>
  <data name="LayoutPage_Back" xml:space="preserve">
    <value>返回应用</value>
  </data>
  <data name="LayoutPage_Footer_Generatedms" xml:space="preserve">
    <value>耗时: {0}ms</value>
  </data>
  <data name="LayoutPage_Footer_Time" xml:space="preserve">
    <value>时间:</value>
  </data>
  <data name="Paginator_Next" xml:space="preserve">
    <value>下一步</value>
  </data>
  <data name="Paginator_Prev" xml:space="preserve">
    <value>上一步</value>
  </data>
  <data name="Paginator_TotalItems" xml:space="preserve">
    <value>总条数</value>
  </data>
  <data name="PerPageSelector_ItemsPerPage" xml:space="preserve">
    <value>每页条数</value>
  </data>
  <data name="PublishedMessagesPage_Title" xml:space="preserve">
    <value>发送出的消息</value>
  </data>
  <data name="SidebarMenu_Failed" xml:space="preserve">
    <value>失败</value>
  </data>
  <data name="SidebarMenu_Succeeded" xml:space="preserve">
    <value>完成</value>
  </data>
  <data name="NavigationMenu_Published" xml:space="preserve">
    <value>发出的</value>
  </data>
  <data name="NavigationMenu_Received" xml:space="preserve">
    <value>接收的</value>
  </data>
  <data name="NavigationMenu_Subscribers" xml:space="preserve">
    <value>订阅列表</value>
  </data>
  <data name="NavigationMenu_Servers" xml:space="preserve">
    <value>服务器</value>
  </data>
  <data name="Common_Enqueued" xml:space="preserve">
    <value>队列</value>
  </data>
  <data name="Metrics_Servers" xml:space="preserve">
    <value>服务器</value>
  </data>
  <data name="Metrics_TotalConnections" xml:space="preserve">
    <value>总连接数</value>
  </data>
  <data name="Metrics_EnqueuedCountOrNull" xml:space="preserve">
    <value>队列</value>
  </data>
  <data name="Metrics_EnqueuedQueuesCount" xml:space="preserve">
    <value>队列</value>
  </data>
  <data name="Metrics_FailedCountOrNull" xml:space="preserve">
    <value>发现了 {0} 个失败的消息</value>
  </data>
  <data name="HomePage_GraphHover_PFailed" xml:space="preserve">
    <value>发送失败</value>
  </data>
  <data name="HomePage_GraphHover_PSucceeded" xml:space="preserve">
    <value>发送成功</value>
  </data>
  <data name="MessagesPage_Modal_Expand" xml:space="preserve">
    <value>展开</value>
  </data>
  <data name="MessagesPage_Modal_Format" xml:space="preserve">
    <value>格式化</value>
  </data>
  <data name="MessagesPage_Modal_Raw" xml:space="preserve">
    <value>原生</value>
  </data>
  <data name="MessagesPage_Model_Collaspse" xml:space="preserve">
    <value>收缩</value>
  </data>
  <data name="MessagesPage_Query_Button" xml:space="preserve">
    <value>查询</value>
  </data>
  <data name="MessagesPage_Query_MessageBody" xml:space="preserve">
    <value>消息内容</value>
  </data>
  <data name="MessagesPage_Query_MessageName" xml:space="preserve">
    <value>消息名称</value>
  </data>
  <data name="MessagesPage_Table_Code" xml:space="preserve">
    <value>编号</value>
  </data>
  <data name="MessagesPage_Table_ExpiresAt" xml:space="preserve">
    <value>过期时间</value>
  </data>
  <data name="MessagesPage_Table_Name" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="MessagesPage_Table_Retries" xml:space="preserve">
    <value>重试次数</value>
  </data>
  <data name="PublishedPage_Title" xml:space="preserve">
    <value>已发送消息</value>
  </data>
  <data name="MessagesPage_Query_MessageGroup" xml:space="preserve">
    <value>消息分组</value>
  </data>
  <data name="MessagesPage_Table_Group" xml:space="preserve">
    <value>分组</value>
  </data>
  <data name="ReceivedMessagesPage_Title" xml:space="preserve">
    <value>接收的消息</value>
  </data>
  <data name="ReceivedPage_Title" xml:space="preserve">
    <value>已接收消息</value>
  </data>
  <data name="SubscribersPage_Title" xml:space="preserve">
    <value>订阅的消息</value>
  </data>
  <data name="Common_Group" xml:space="preserve">
    <value>分组</value>
  </data>
  <data name="Common_Method" xml:space="preserve">
    <value>方法</value>
  </data>
  <data name="Common_Name" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="MessagesPage_NoMessages" xml:space="preserve">
    <value>没有消息</value>
  </data>
  <data name="HomePage_GraphHover_RFailed" xml:space="preserve">
    <value>消费失败</value>
  </data>
  <data name="HomePage_GraphHover_RSucceeded" xml:space="preserve">
    <value>消费成功</value>
  </data>
  <data name="NodePage_NoNodes" xml:space="preserve">
    <value>你需要配置分布式节点发现功能。</value>
  </data>
  <data name="NodePage_Title" xml:space="preserve">
    <value>节点列表</value>
  </data>
  <data name="SubscribersPage_NoSubscribers" xml:space="preserve">
    <value>没有配置CAP订阅者</value>
  </data>
  <data name="NodePage_Switch" xml:space="preserve">
    <value>切换到</value>
  </data>
  <data name="Common_ReConsume" xml:space="preserve">
    <value>重新消费</value>
  </data>
  <data name="MessagesPage_Table_State" xml:space="preserve">
    <value>状态</value>
  </data>
  <data name="NodePage_Table_IP" xml:space="preserve">
    <value>IP 地址</value>
  </data>
  <data name="NodePage_Table_NodeName" xml:space="preserve">
    <value>节点名称</value>
  </data>
  <data name="NodePage_Table_Port" xml:space="preserve">
    <value>端口号</value>
  </data>
  <data name="LayoutPage_Footer_NodeCurrent" xml:space="preserve">
    <value>节点: {0}</value>
  </data>
  <data name="Common_NotAvailable" xml:space="preserve">
    <value>N/A</value>
  </data>
</root>